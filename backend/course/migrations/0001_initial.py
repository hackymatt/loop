# Generated by Django 4.2.7 on 2023-11-30 10:06

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import course.models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("title", models.CharField()),
                ("description", models.TextField()),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("P", "Podstawowy"),
                            ("Ś", "Średniozaawansowany"),
                            ("Z", "Zaawansowany"),
                            ("E", "Ekspert"),
                        ],
                        null=True,
                    ),
                ),
                ("github_repo_link", models.URLField()),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=7,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                ("active", models.BooleanField(default=False)),
                (
                    "image",
                    models.ImageField(upload_to=course.models.course_directory_path),
                ),
                (
                    "video",
                    models.FileField(
                        null=True, upload_to=course.models.course_directory_path
                    ),
                ),
            ],
            options={
                "db_table": "course",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("title", models.CharField()),
                ("description", models.TextField()),
                ("duration", models.PositiveIntegerField()),
                ("github_branch_link", models.URLField()),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=7,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                ("active", models.BooleanField(default=False)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="course.course",
                    ),
                ),
            ],
            options={
                "db_table": "lesson",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.TextField()),
            ],
            options={
                "db_table": "topic",
                "ordering": ["id"],
                "indexes": [
                    models.Index(fields=["id"], name="topic_id_f75fc5_idx"),
                    models.Index(fields=["name"], name="topic_name_bfb54a_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Technology",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField()),
            ],
            options={
                "db_table": "technology",
                "ordering": ["id"],
                "indexes": [
                    models.Index(fields=["id"], name="technology_id_74ed03_idx"),
                    models.Index(fields=["name"], name="technology_name_ef7438_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.CharField()),
            ],
            options={
                "db_table": "skill",
                "ordering": ["id"],
                "indexes": [
                    models.Index(fields=["id"], name="skill_id_0bf196_idx"),
                    models.Index(fields=["name"], name="skill_name_e8acf2_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="CoursePriceHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=7,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="course.course"
                    ),
                ),
            ],
            options={
                "db_table": "course_price_history",
                "ordering": ["id"],
            },
        ),
        migrations.AddField(
            model_name="course",
            name="skills",
            field=models.ManyToManyField(
                related_name="course_skills", to="course.skill"
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="technology",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="technology",
                to="course.technology",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="topics",
            field=models.ManyToManyField(
                related_name="course_topics", to="course.topic"
            ),
        ),
        migrations.CreateModel(
            name="LessonPriceHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=7,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="course.lesson"
                    ),
                ),
            ],
            options={
                "db_table": "lesson_price_history",
                "ordering": ["id"],
                "indexes": [
                    models.Index(fields=["id"], name="lesson_pric_id_b25865_idx"),
                    models.Index(
                        fields=["lesson"], name="lesson_pric_lesson__9106d6_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="lesson",
            index=models.Index(fields=["id"], name="lesson_id_72b049_idx"),
        ),
        migrations.AddIndex(
            model_name="lesson",
            index=models.Index(fields=["course"], name="lesson_course__c4014c_idx"),
        ),
        migrations.AddIndex(
            model_name="coursepricehistory",
            index=models.Index(fields=["id"], name="course_pric_id_e0da53_idx"),
        ),
        migrations.AddIndex(
            model_name="coursepricehistory",
            index=models.Index(
                fields=["course"], name="course_pric_course__1bf2cc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(fields=["id"], name="course_id_1077aa_idx"),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(fields=["technology"], name="course_technol_44f663_idx"),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(fields=["level"], name="course_level_129141_idx"),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(fields=["price"], name="course_price_e0abd1_idx"),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["technology", "level", "price"],
                name="course_technol_8c2153_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["technology", "level"], name="course_technol_63c80f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["technology", "price"], name="course_technol_c86a02_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["level", "price"], name="course_level_8e6c37_idx"
            ),
        ),
    ]
