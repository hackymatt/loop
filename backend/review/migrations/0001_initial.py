# Generated by Django 4.2.7 on 2024-09-24 08:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import review.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("profile", "0004_create_dummy_student"),
        ("lesson", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "rating",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=2,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("review", models.TextField(blank=True, null=True)),
                (
                    "lecturer",
                    models.ForeignKey(
                        on_delete=models.SET(review.models.get_dummy_lecturer_profile),
                        related_name="review_lecturer",
                        to="profile.lecturerprofile",
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="lesson.lesson"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=models.SET(review.models.get_dummy_student_profile),
                        related_name="review_student",
                        to="profile.studentprofile",
                    ),
                ),
            ],
            options={
                "db_table": "review",
                "ordering": ["id"],
                "indexes": [
                    models.Index(fields=["id"], name="review_id_ea7b6f_idx"),
                    models.Index(fields=["lesson"], name="review_lesson__992cdb_idx"),
                    models.Index(fields=["lecturer"], name="review_lecture_0069cc_idx"),
                    models.Index(fields=["rating"], name="review_rating_d6a32f_idx"),
                    models.Index(
                        fields=["rating", "review"], name="review_rating_04cb9f_idx"
                    ),
                ],
            },
        ),
    ]
